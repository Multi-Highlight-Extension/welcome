var background=function(){"use strict";var s,c;function u(e){return e==null||typeof e=="function"?{main:e}:e}const a=u({main(){const e=r=>!!r&&!r.startsWith("chrome://");chrome.tabs.onUpdated.addListener((r,n,d)=>{n.status==="complete"&&e(d.url)&&t(r)}),chrome.tabs.onActivated.addListener(async({tabId:r})=>{const n=await chrome.tabs.get(r);e(n.url)&&t(r)}),chrome.windows.onFocusChanged.addListener(r=>{r!==chrome.windows.WINDOW_ID_NONE&&chrome.tabs.query({windowId:r,active:!0},([n])=>{n!=null&&n.id&&e(n.url)&&t(n.id)})})}});function t(e){chrome.tabs.sendMessage(e,{type:"updateHighlight"})}function h(){}(c=(s=globalThis.browser)==null?void 0:s.runtime)!=null&&c.id?globalThis.browser:globalThis.chrome;function o(e,...r){}const l={debug:(...e)=>o(console.debug,...e),log:(...e)=>o(console.log,...e),warn:(...e)=>o(console.warn,...e),error:(...e)=>o(console.error,...e)};let i;try{i=a.main(),i instanceof Promise&&console.warn("The background's main() function return a promise, but it must be synchronous")}catch(e){throw l.error("The background crashed on startup!"),e}return i}();
background;
